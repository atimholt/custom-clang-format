---
# Chosen Options -v-1
#----------------

#   Completely thought out and formatted -v-2
#  --------------------------------------
Language: Cpp

#     Classes & Structs -v-3
#    -------------------

AccessModifierOffset: -3  # This assumes that indentation is 4!

#       Constructors / Destructors -v-4
#      ----------------------------

AllowAllConstructorInitializersOnNextLine: true
ConstructorInitializerAllOnOneLineOrOnePerLine: true

#     Indentation -v-3
#    -------------

ContinuationIndentWidth: 4

ConstructorInitializerIndentWidth: 4

#     Breaks -v-3
#    --------

BreakBeforeBinaryOperators: NonAssignment
BreakBeforeTernaryOperators: true
BreakConstructorInitializers: BeforeComma
BreakInheritanceList: BeforeComma

#       Braces -v-4
#      --------

BreakBeforeBraces: Custom # Required for BraceWrapping options
BraceWrapping:                                                    #-v-5
  AfterClass: true                                                  #-v-6
  AfterStruct: true
  AfterFunction: true
  # -----
  AfterCaseLabel: false
  AfterControlStatement: Never
  AfterEnum: false
  AfterNamespace: false
  AfterUnion: false

  BeforeLambdaBody: true                                            #-v-6
  # -----
  BeforeCatch: false
  BeforeElse: false
  BeforeWhile: false

  IndentBraces: false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
                                                                    #-v-6
  #SplitEmptyNamespace: ?  # n/a (AfterNamespace: false)
  #AfterExternBlock: ?     # Bad Documentation
                                                                  #-^-5

#   Selected options (not sorted) -v-2
#  -------------------------------

AlignAfterOpenBracket: DontAlign
AlignConsecutiveAssignments: false
AlignConsecutiveDeclarations: false
AlignConsecutiveMacros: false
AlignEscapedNewlines: Right
AllowAllArgumentsOnNextLine: true  # Would prefer a "force" option, maybe
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortBlocksOnASingleLine: Never
AllowShortCaseLabelsOnASingleLine: false
AllowShortEnumsOnASingleLine: true
AllowShortFunctionsOnASingleLine: InlineOnly
AllowShortIfStatementsOnASingleLine: Never
AllowShortLambdasOnASingleLine: All
AllowShortLoopsOnASingleLine: false
AlwaysBreakBeforeMultilineStrings: true
AlwaysBreakTemplateDeclarations: Yes
BinPackArguments: true
BinPackParameters: false
ColumnLimit: 80
Cpp11BracedListStyle: true
DeriveLineEnding: false # Don't ever "derive" anything
DerivePointerAlignment: false # Don't ever "derive" anything
ExperimentalAutoDetectBinPacking: true #NOTE: might go away. TODO  Do other settings interfere?
FixNamespaceComments: true
IncludeBlocks: Preserve # TODO Consider using Regroup (mull)
KeepEmptyLinesAtTheStartOfBlocks: false
MaxEmptyLinesToKeep: 2
NamespaceIndentation: Inner
PointerAlignment: Left
SpaceAfterTemplateKeyword: false
Standard: c++20
TabWidth: 4
IndentWidth: 4
UseTab: AllignWithSpaces # Is this right?
IndentCaseBlocks: false
IndentCaseLabels: false
IndentWrappedFunctionNames: false
IndentPPDirectives: BeforeHash
ReflowComments: true
#IncludeCategories: # This is for use with IncludeBlocks: Regroup
#  - Regex: ?
#    Priority: ?
#    SortPriority: ?

#   Firmly Against Even Being A Consideration -v-2
#  -------------------------------------------

#CompactNamespaces: ?  # irrelevant, old C++
#DisableFormat: ?
#ForEachMacros:

#   To Mull Over -v-2
#  --------------

# NOTE: also see '\v\c#.*<TODO>.+<mull>'

AlignOperands: Align # Set to Align in bespoke irrlicht examples (or earlier)
AlignTrailingComments: true
AlwaysBreakAfterReturnType: AllDefinitions
BreakStringLiterals: false
#CommentPragmas: "^/" # Doxygen C++ style comments (3 slashes)

# Not yet evaluated -v-1
#-------------------

#IncludeIsMainRegex: ?
#IncludeIsMainSourceRegex: ?
#IndentExternBlock: ?
#IndentGotoLabels: ?
#InsertTrailingCommas: ?
#JavaScriptQuotes: ?
#JavaScriptWrapImports: ?
#MacroBlockBegin: ?
#MacroBlockEnd: ?
#PenaltyBreakAssignment: ?
#PenaltyBreakBeforeFirstCallParameter: ?
#PenaltyBreakComment: ?
#PenaltyBreakFirstLessLess: ?
#PenaltyBreakString: ?
#PenaltyBreakTemplateDeclaration: ?
#PenaltyExcessCharacter: ?
#PenaltyReturnTypeOnItsOwnLine: ?
#SortIncludes: ?
#SortUsingDeclarations: ?
#SpaceAfterCStyleCast: ?
#SpaceAfterLogicalNot: ?
#SpaceBeforeAssignmentOperators: ?
#SpaceBeforeCpp11BracedList: ?
#SpaceBeforeCtorInitializerColon: ?
#SpaceBeforeInheritanceColon: ?
#SpaceBeforeParens: ?
#SpaceBeforeRangeBasedForLoopColon: ?
#SpaceBeforeSquareBrackets: ?
#SpaceInEmptyBlock: ?
#SpaceInEmptyParentheses: ?
#SpacesBeforeTrailingComments: ?
#SpacesInAngles: ?
#SpacesInCStyleCastParentheses: ?
#SpacesInConditionalStatement: ?
#SpacesInContainerLiterals: ?
#SpacesInParentheses: ?
#SpacesInSquareBrackets: ?
#StatementMacros:
#UseCRLF: ?
#WhitespaceSensitiveMacros:

# Weird -v-1
#------------

#   Not mentioned in the documentation -v-2
#  ------------------------------------

#BreakBeforeInheritanceComma: ?
#BreakConstructorInitializersBeforeComma: ?

#   ‽‽‽ -v-2
#  -----

#AlignConsecutiveBitFields: ?

#   Deprecated -v-2
#  ------------

#AlwaysBreakAfterDefinitionReturnType: ?

# Notes -v-1
#-------

# https://releases.llvm.org/11.0.0/tools/clang/docs/ClangFormatStyleOptions.html

#-^-1

# vim: set et ts=2 sw=0 sts=0 ft=yaml fdm=marker fmr=-v-,-^- :
...
